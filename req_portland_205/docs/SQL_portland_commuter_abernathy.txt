--#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--#
--# By: mike gaunt, michael.gaunt@wsp.com
--#
--# README: SQL script to grab commute trips through Abernathy Bridge
--#-------- [[description]]
--# *please use 80 character margins
--# *please save as helpers_[[informative description]]
--#
--#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
select * from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonev_UFkAqeZRw8KnVuh85TmXvLevyINhJFlvuNRRTKJVdc4 limit 2

--index=====================================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#contains full network link ids for abernathy bridge 
#i think for 2021_Q4
13674580744864 w 13674580744864527942
16170741915355 E 16170741915355440261

--make temptable============================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--query to make temp table 
--need to feed it thru_trip table made from replica query
create or replace temp table temp_unlisted_ab as
select
    activity_id, person_id, mode, travel_purpose, tour_type, previous_activity_type, trip_type, vehicle_type
    ,origin_bgrp, origin_poly, flag_sa_origin
    ,destination_bgrp, destination_poly, flag_sa_destination
    ,network_link_ids_unnested
    ,ROW_NUMBER ()
    OVER (PARTITION BY activity_id) AS index
    from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonev_UFkAqeZRw8KnVuh85TmXvLevyINhJFlvuNRRTKJVdc4
                          ,unnest(network_link_ids) as network_link_ids_unnested;

--inspect===================================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
select *  from temp_unlisted_ab limit 5;
select count(*) as count from (select distinct activity_id from temp_unlisted_ab); #unique activites on bridge
select count(*) as count from (select distinct person_id from temp_unlisted_ab); #unique persons on bridge
select count(*) as count from (select distinct person_id from temp_unlisted_ab where 1=1 and tour_type = 'COMMUTE'); #unique persons on bridge that commute
select count(*) as count from temp_unlisted_ab where 1=1 and network_link_ids_unnested = '13674580744864527942';

--calculate usage============================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--Agg person_link_act========================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
create or replace temp table temp_agg_person_link_act as
select activity_id, person_id, network_link_ids_unnested, count(*) as count from temp_unlisted_ab  
where 1=1 
and network_link_ids_unnested in ('13674580744864527942', '16170741915355440261')
group by activity_id, person_id, network_link_ids_unnested;

--select * from temp_agg_person_link_act limit 10;
--select * from temp_agg_person_link_act order by count desc -- confirms that each activity uses bridge link once
--select count, count(*) as frequency from (select activity_id, count(*) as count from temp_agg_person_link_act group by activity_id) group by count -- very small number of activites use both directions of bridge
--inspect===================================================================================
--select *  from temp_unlisted_ab limit 5;
--select count(*) as count from (select distinct activity_id from temp_agg_person_link_act); #unique activites on bridge
--select count(*) as count from (select distinct person_id from temp_agg_person_link_act); #unique persons on bridge

--Agg person_link===========================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
--table details number of times a unique person uses one of the bridge links
create or replace temp table temp_agg_person_link as
select person_id, network_link_ids_unnested, sum(count) as count from temp_agg_person_link_act  
group by person_id, network_link_ids_unnested;

--select * from temp_agg_person_link order by count desc limit 10;
--select * from temp_agg_person_link_act order by count desc -- confirms that each activity uses bridge link once
--select count, count(*) as frequency from (select activity_id, count(*) as count from temp_agg_person_link_act group by activity_id) group by count -- very small number of activites use both directions of bridge

--Agg person=================================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
create or replace temp table temp_agg_person_link_usage as
select person_id,  sum(count) as count from temp_agg_person_link  
group by person_id;

--select * from temp_agg_person_link_usage limit 6
--select * from (select person_id, count(*) as count from temp_agg_person_link_usage group by person_id) order by count desc; --check to makesure one entry per person_id
--select count(*) as count from (select distinct person_id from temp_agg_person_link_usage); --check to count unique person_ids, check against the top 
--select sum(count) as trip_counts from temp_agg_person_link_usage; --check to add all unique persons unique trips, check against first calcualation 

--to grab specific person_ids for QC section below
select * from temp_agg_person_link_usage 
where 1=1 
--and count = 2
and count = 3
--and count = 4

--looking up weird people and QC============================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
select * except(network_link_ids) 
,TIME(start_local_hour, cast(floor(extract(MINUTE FROM start_time)/15)*15 as int), 00) as start_time_clean
,TIME(end_local_hour, cast(floor(extract(MINUTE FROM end_time)/15)*15 as int), 00) as end_time_clean
from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonev_UFkAqeZRw8KnVuh85TmXvLevyINhJFlvuNRRTKJVdc4
where 1=1 
--and person_id = '15525892092777646262'
--and person_id = '1460562205832579045'
--and person_id = '11891464330200379513'
--and person_id in ('15341434935722848976', '14264331121945190033', '5134522435030234448', '5779237413965482081')
order by person_id, start_time

--usage aggregation=========================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
select count, sum(count) as freq from temp_agg_person_link_usage
group by count;

select count, count(*) as freq from temp_agg_person_link_usage
group by count;

--usage aggregation=========================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

--creating index for 2 counts 
create or replace temp table temp_agg_person_link_usage_2 as
select * from temp_agg_person_link_usage 
where 1=1 and count = 2;

--select * from temp_agg_person_link_usage_2 limit 10;
--select count, count(*) as count_ttl from temp_agg_person_link_usage_2 group by count;
--select * from (select person_id, count(*) as count from temp_agg_person_link_usage_2 group by person_id) order by count desc limit 5;

select start_time_clean, count(*) as count from (
select * except(network_link_ids) 
,TIME(start_local_hour, cast(floor(extract(MINUTE FROM start_time)/15)*15 as int), 00) as start_time_clean
,TIME(end_local_hour, cast(floor(extract(MINUTE FROM end_time)/15)*15 as int), 00) as end_time_clean
from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonev_UFkAqeZRw8KnVuh85TmXvLevyINhJFlvuNRRTKJVdc4
where 1=1 
and person_id in (select distinct person_id from temp_agg_person_link_usage_2)
and tour_type = 'COMMUTE'
order by person_id
) group by start_time_clean
order by start_time_clean
limit 10























select count, count(*) as ttl_count from 
(select person_id, count(*) as count from 
(
select person_id, network_link_ids_unnested, count(*) as count from temp_unlisted_ab  
where 1=1 
and network_link_ids_unnested in ('13674580744864527942', '16170741915355440261')
--and tour_type = 'COMMUTE'
group by person_id, network_link_ids_unnested
) group by person_id
order by count desc)
group by count

--extra============================================================================
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

select mode, travel_purpose, tour_type, previous_activity_type, trip_type, vehicle_type, count(*) as count from temp_unlisted_ab  
where 1=1 
and network_link_ids_unnested in ('13674580744864527942', '16170741915355440261')
and tour_type = 'COMMUTE'
group by mode, travel_purpose, tour_type, previous_activity_type, trip_type, vehicle_type
order by travel_purpose, tour_type
limit 25






select * from temp_unlisted_ab
where 1=1 
and person_id = '7894336253305128925'
and network_link_ids_unnested = '13674580744864527942'




9042 + 14615

select * from temp_unlisted_ab  
where 1=1 
and network_link_ids_unnested in ('13674580744864527942', '16170741915355440261')
and tour_type = 'COMMUTE'
group by mode, travel_purpose, tour_type, previous_activity_type, trip_type, vehicle_type
order by travel_purpose, tour_type
limit 25




















